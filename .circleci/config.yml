# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
orbs:
  slack: circleci/slack@4.10.1
jobs:
  playwright-test:
    docker:
      - image: mcr.microsoft.com/playwright:v1.22.0-focal
    environment:
      NODE_ENV: development
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d6:36:58:af:d8:57:47:db:30:77:62:ea:40:f7:03:03"
      - checkout
      - run: npm install
      - run: npm install -g docker 
      - run: docker exec -u root -t -i container_id /bin/bash
      - run: apt-get update
      - run: apt-get -y install sudo
      - run: sudo apt install openjdk-8-jdk -y
      - run: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
      - run: export PATH=$PATH:$JAVA_HOME/bin
      - run: npm i -D playwright @playwright/test
      - run: npm i -D experimental-allure-playwright 
      - run: npm i -D allure-commandline
      - run:
          name: Run tests
          command: | 
             npx playwright test --reporter=experimental-allure-playwright
      - run:
          name: Generate Allure Report
          command: | 
              npx allure generate ./allure-results --clean
              npm install gh-pages -g
              git config user.email "anne.h@mailfence.com"
              git config user.name "anneH"
              gh-pages --dist ./allure-report
          when: always
      # - store_artifacts:
      #     path: ./allure-report
          # destination: /test-results
      - store_artifacts:
           path: allure-report
      - store_test_results:
           path: /root/project/allure-report/index.html
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  e2e-test-workflow:
    jobs:
      - playwright-test:
          context: slack
          post-steps:
             - slack/notify:
                 channel: circleci
                 event: always
                 mentions: "<https://anneh.github.io/allure-playwright-example/|Allure Report in Github Pages> <https://output.circle-artifacts.com/output/job/$CIRCLE_WORKFLOW_ID/artifacts/0/allure-report/index.html|Allure Report in CircleCi>"
              # - slack/notify:
              #     event: pass
              #     channel: circleci
              #     custom: |
              #      {
              #         "text": "CircleCI job succeeded!",              
              #         "blocks": [
              #           {
              #             "type": "header",
              #             "text": {
              #               "type": "plain_text",
              #               "text": "Job Successful. :tada:",
              #               "emoji": true
              #             }
              #           },
              #               {
              #                 "type": "mrkdwn",
              #                 "text": "*Job*: ${CIRCLE_JOB}"
              #               }
              #             ]
              #           },
                       
              #           {
              #             "type": "actions",
              #             "elements": [
              #               {
              #                 "type": "button",
              #                 "text": {
              #                   "type": "plain_text",
              #                   "text": "View Job"
              #                 },
              #                 "url": "${CIRCLE_BUILD_URL}"
              #               }
              #             ]
              #           }
              #         ]
              #       }
    # triggers:
    #   - schedule:
    #       cron: '00 00 * * *'
    #       filters:
    #         branches:
    #           only:
    #             - circleci-project-setup
    #   - schedule:
    #       cron: '00 23 * * *'
    #       filters:
    #         branches:
    #           only:
    #             - circleci-project-setup
